jobs:
  build:
    docker:
      - image: python:3.6                   # similar to "image" in GitLab
    steps:
      - checkout
      - run: |                              # similar to "script" in GitLab
          pip install -r requirements.txt
          python manage.py check

  test:
    docker:
      - image: python:3.6
    steps:
      - checkout
      - run: |
          pip install -r requirements.txt
          python manage.py test taskManager
          
  release:
    machine: true                                        # What is this for?
    steps:
      - checkout
      - run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker build -t $DOCKER_USERNAME/django.nv .   # Build the application into Docker image
          docker push $DOCKER_USERNAME/django.nv         # Push the image into registry
          
  integration:
    docker:
      - image: python:3.6
    steps:
      - checkout
      - run:
          command: |
            echo "This is an integration step"
            exit 0
          when: always                    # Even if the job fails, continue to the next stages

  prod:
    docker:
      - image: python:3.6
    steps:
      - checkout
      - run: echo "This is a 'deploy' step."

    oast:
    machine: true
    steps:
      - checkout

      - run: docker run -v $(pwd):/src --rm hysnsec/safety check -r /src/requirements.txt --json | tee oast-results.json

      - store_artifacts:
          path: oast-results.json
          destination: safety-artifact

workflows:
  version: 2
  django:
    jobs:
      - build
      - test:
      - oast:
      - integration:
      - prod:
